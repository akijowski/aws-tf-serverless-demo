version: '3.7'

services:
  hello-lambda:
    image: hello-lambda
    build:
      context: .
    container_name: hello-lambda

  post-key-lambda:
    image: post-key-lambda
    build:
      context: .
      args:
        - BINARY_NAME=post-key
        - FUNCTION_NAME=PostKeyFunction
    container_name: post-key-lambda
    depends_on:
      - dynamodb-local
    environment:
      HUMAN_LOGS: true
      DYNAMODB_ENDPOINT: 'http://dynamodb-local:8000'
      KV_TABLE_NAME: key-values

  get-key-lambda:
    image: get-key-lambda
    build:
      context: .
      args:
        - BINARY_NAME=get-key
        - FUNCTION_NAME=GetKeyFunction
    container_name: get-key-lambda
    depends_on:
      - dynamodb-local
    environment:
      HUMAN_LOGS: true
      DYNAMODB_ENDPOINT: 'http://dynamodb-local:8000'
      KV_TABLE_NAME: get-key-values

  delete-key-lambda:
    image: delete-key-lambda
    build:
      context: .
      args:
        - BINARY_NAME=delete-key
        - FUNCTION_NAME=DeleteKeyFunction
    container_name: delete-key-lambda
    depends_on:
      - dynamodb-local
    environment:
      HUMAN_LOGS: true
      DYNAMODB_ENDPOINT: 'http://dynamodb-local:8000'
      KV_TABLE_NAME: delete-key-values

  integration:
    image: golang:1.20-bullseye
    container_name: integration-test
    depends_on:
      - hello-lambda
      - post-key-lambda
      - get-key-lambda
      - delete-key-lambda
      - dynamodb-local
    volumes:
      - .:/code
    working_dir: /code/test/integration
    command: go test -v -tags integration .
    environment:
      AWS_ACCESS_KEY_ID: defaultkey
      AWS_SECRET_ACCESS_KEY: defaultsecret
      AWS_REGION: us-east-1

  dynamodb-local:
    command: "-jar DynamoDBLocal.jar -inMemory"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    working_dir: /home/dynamodblocal
